type User {
  id: ID!
  firstName: String!
  lastName: String
  email: String!
  wordGoal: Int!
}

type Entry {
  id: ID!
  User: User!
  wordCount: Int!
  content: String!
}

type Editor {
  id: ID!
  User: User!
  showToolbar: Boolean!
  showPrompt: Boolean!
  showCounter: Boolean!
}

type Query {
  user(id:ID): User!
  editors: [Editor!]!
  entries: [Entry!]!
}

input NewUser {
  firstName: String!
  lastName: String
  email: String!
}

input NewEntry {
  userId: String!
  wordCount: Int!
  content: String!
}

input NewEditor {
  userId: String!
  showToolbar: Boolean!
  showPrompt: Boolean!
  showCounter: Boolean!
}

type Mutation {
  createUser(input: NewUser!): User!
  createEntry(input: NewEntry!): Entry!
  createEditor(input: NewEditor!): Editor!
}